<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>Skunkland Server</title>
		<link rel="stylesheet" href="../data/mc.css">
		<link rel="icon" href="../images/pickaxe.png" type="image/x-icon">
		<script src="../data/time.js"></script>
		<script src="../data/header.js"></script>
	</head>
	<body>
		<header><script>insertHeader();</script></header>
		<main>
			<div class="content round shadow">
				<div id="gallerycontainer"></div>
				<div class="contentheader round">Galleries</div>
				<div class="flex" id="general"></div>
				<hr style="border: 1px solid #999; width: 70%; margin: auto">
				<div class="flex" id="states"></div>
			</div>
		</main>
		<script>
			const g = [];
			loadDoc("https://api.github.com/repos/thursiya/thursiya.github.io/contents/skunkland/gallery/images", getRandomImages);	

			function getRandomImages(xhr) {
				let pics = JSON.parse(xhr.response);
				for (let i = pics.length - 1; i > 0; i--) {
					let r = ~~(Math.random() * (i + 1));
					[pics[i], pics[r]] = [pics[r], pics[i]];
				}
				pics.splice(-3);
				g.push({name: "Random Screenshots", type: -1, section: [{img: [pics[0].name.slice(0, -4), pics[1].name.slice(0, -4), pics[2].name.slice(0, -4)]}]});
				loadDoc("../data/gallery.txt", buildGalleryArray);
			}

			function buildGalleryArray(xhr) {
				g.push(...JSON.parse(xhr.response.replace(/(\s*{\s*|\s*,\s*)(['"])?(\w+)(['"])?:/g, '$1"$3":')));
				function writeLinks(arr, dest) {
					let out = "";
					for (let i of arr) {
						out += `<div style="flex: 50%"><span class="clickable" onclick="loadGallery(${g.findIndex(v => v.name == arr[i].name)})">${arr[i].name}</span></div>`;
					}
					
					/*for (let i = 0; i < arr.length; i++) {
						if (i == 0 || i == Math.ceil(arr.length / 2)) out += `<div class="col-6"><ul>`;
						out += `<li><span class="clickable" onclick="loadGallery(${g.findIndex(v => v.name == arr[i].name)})">${arr[i].name}</span>`;
						if (i == arr.length - 1 || i == Math.ceil(arr.length / 2) - 1) out += `</ul></div>`;
					}*/
					document.getElementById(dest).innerHTML = out;
				}
				loadGallery(0);
				writeLinks(g.filter(v => v.type == 0), "general");
				writeLinks(g.filter(v => v.type == 1), "states");
			}

			function loadGallery(gid) {
				let out = "";
				for (let section of g[gid].section) {
					out += `<div class="contentheader round">${section.title || g[gid].name}</div><div class="gallery">`;
					section.img.forEach(v => out += `<div class="pic"><a href="images/${v}.jpg" target="_blank"><img src="images/${v}.jpg" height="175" alt="${v}"><div class="caption">${v}</div></a></div>`);
					out += `</div>`;
				}
				document.getElementById("gallerycontainer").innerHTML = out;
			}
		</script>
	</body>
</html>
