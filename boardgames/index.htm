<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>Board Game Collection></title>
		<link rel="stylesheet" href="data/boardgames.css">
	</head>
	<body>
		<main>
			<div class="flexbox">
				<div class="col">
					<p><i>Click the appropriate column headers to sort by Title, Players, Time, Complexity, or Luck Factor. Click again to reverse the list.</i></p>
					<h2>My Board Game Collection</h2>
					<table id="main"></table>
				</div>
				<div class="col">
					<h2>2-Player Only Games</h2>
					<table id="2player"></table>
					<br>
					
					<h2>Other Games</h2>
					<table id="other"></table>
				</div>
			</div>
		</main>
		<script>
			const mainTableOutput = [];
			let active = -1;
			const reducer = (t, v) => t + `<tr><td class="picbox"><img src="images/${v.num}.jpg"></td>
    				<td><a href="http://www.boardgamegeek.com/boardgame/${v.num}" target="_blank">${v.name}</a></td>
	 			<td title="${v.pnote || ""}">${v.ptext || (v.minp ? `${v.minp}-${v.maxp}` : "2")}</td>
      				<td title="${v.tnote || ""}">${v.ttext || v.time}</td>
	   			<td>${v.skill}</td><td>${v.luck}</td>
				<td title="${v.enote || ""}">${v.exp || "-"}</td></tr>`;

			// Draw table headings
			for (let i of ["main", "2player", "other"]) {
				document.getElementById(i).innerHTML = `<thead><tr><th title="Box art from the Board Game Geek site.">Image</th>
     				<th title="Title of the game, linked to its Board Game Geek entry."${i == "main" ? ` class="sortable" onclick="list(0)"` : ""}>Title</th>
	   			<th title="Number of players supported."${i == "main" ? ` class="sortable" onclick="list(1)"` : ""}>Players</th>
       				<th title="How much time it takes to play an average game, in minutes. The variable &#39;P&#39; represents players, as many games have 
       					playing times dependant on number of players."${i == "main" ? ` class="sortable" onclick="list(2)"` : ""}>Time</th>
       				<th title="Learning curve and strategic depth on a scale of 1 to 5."${i == "main" ? ` class="sortable" onclick="list(3)"` : ""}>Complexity</th>
	     			<th title="Importance of random/external factors on a scale of 1 to 5."${i == "main" ? ` class="sortable" onclick="list(4)"` : ""}>Luck Factor</th>
	   			<th title="Any expansions available for this game. I do not own expansions in italics.">Expansions</th></tr></thead><tbody><tr><td><h2>... Loading ...</h2></td></tr></tbody>`;
			}

			loadDoc("data/gamedata.txt", buildMainArray);
			loadDoc("data/2pgamedata.txt", build2pArray);
			loadDoc("data/othergamedata.txt", buildOtherArray);
			
			function loadDoc(url, cFunction) {
				const xhttp = new XMLHttpRequest();
				xhttp.onload = function() {return cFunction(this);}
				xhttp.open("GET", url);
				xhttp.send();
			}

			function buildMainArray(xhr) {
				const title = convertToArray(xhr.response).sort((a, b) => a.name.replace(/^The /, "").localeCompare(b.name.replace(/^The /, "")));
				const players = title.toSorted((a, b) => a.minp == b.minp ? a.maxp - b.maxp : a.minp - b.minp);
				const time = title.toSorted((a, b) => a.time - b.time);
				const complexity = title.toSorted((a, b) => a.skill - b.skill);
				const luck = title.toSorted((a, b) => a.luck - b.luck);
				
				mainTableOutput.push([title.reduce(reducer, ""), title.reduceRight(reducer, "")],
						[players.reduce(reducer, ""), players.toSorted((a, b) => a.maxp - b.maxp).reduceRight(reducer, "")],
						[time.reduce(reducer, ""), time.reduceRight(reducer, "")],
						[complexity.reduce(reducer, ""), complexity.reduceRight(reducer, "")],
						[luck.reduce(reducer, ""), luck.reduceRight(reducer, "")]);
				list();
			}

			function build2pArray(xhr) {
				document.querySelector('#2player tbody').innerHTML = convertToArray(xhr.response).reduce(reducer, "");				
			}

			function buildOtherArray(xhr) {
				document.querySelector('#other tbody').innerHTML = convertToArray(xhr.response).reduce(reducer, "");
			}

			function convertToArray(data) {
				// Properly quote keys for JSON parsing
				data = data.replace(/(\s*{\s*|\s*,\s*)(['"])?(\w+)(['"])?:/g, '$1"$3":');
				// Convert @####|Name@ to expansion links
				data = data.replace(/@(\d+)\|([^@]+)@/g, "<a href='https://www.boardgamegeek.com/boardgameexpansion/$1' target='_blank'>$2</a>");
				return JSON.parse(data);
			}

			function list(id = 0) {
				document.querySelector('#main tbody').innerHTML = mainTableOutput[id][id == active ? 1 : 0];
				active = id == active ? -1 : id;
			}
		</script>
	</body>
</html>
